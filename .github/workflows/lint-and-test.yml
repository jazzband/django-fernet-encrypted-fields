name: Lint & Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Lint with Black
        run: |
          black --check .

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        django_version: ["3.2", "4.0", "4.1", "4.2", "5.0"]
        exclude:
          - python-version: "3.8"
            django-version: "5.0"
          - python-version: "3.9"
            django-version: "5.0"

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python_version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python_version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -q Django==${{ matrix.django_version }}
        pip install coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run tests
      run: |
        coverage run --source="./encrypted_fields" manage.py test
        coverage xml

    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: true
